{
  "min_packer_version": "0.12.0",
  "variables": {
    "vault_version": "1.0.0",
    "consul_module_version": "v0.4.2",
    "consul_version": "1.3.1",
    "aws_region": "eu-west-1",
    "subnet_id": "subnet-093e9b3ab369ce081",
    "consul_download_url": "{{env `CONSUL_DOWNLOAD_URL`}}",
    "vault_download_url": "{{env `VAULT_DOWNLOAD_URL`}}",
    "install_auth_signing_script": "true",
    "ca_public_key_path": "keys/vault/ca.crt",
    "tls_public_key_path": "keys/vault/vault.crt",
    "tls_private_key_path": "keys/vault/vault.key",
    "associate_public_ip_address": "true"
  },
  "builders": [{
    "ami_name": "vault-consul-ubuntu-{{isotime | clean_ami_name}}-{{uuid}}",
    "ami_description": "An Ubuntu 16.04 AMI that has Vault and Consul installed.",
    "instance_type": "t2.micro",
    "name": "ubuntu16-ami",
    "region": "{{user `aws_region`}}",
    "subnet_id": "{{user `subnet_id`}}",
    "associate_public_ip_address": "{{user `associate_public_ip_address`}}",
    "tags": {
      "Name": "vault-instances",
      "Project": "demo",
      "Env": "dev"
    },
    "run_tags": {
      "Name:": "vault-packer-builder"
    },
    "type": "amazon-ebs",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "architecture": "x86_64",
        "name": "*ubuntu-xenial-16.04-amd64-server-*",
        "block-device-mapping.volume-type": "gp2",
        "root-device-type": "ebs"
      },
      "owners": ["099720109477"],
      "most_recent": true
    },
    "ssh_username": "ubuntu"
  },{
    "ami_name": "vault-consul-amazon-linux-{{isotime | clean_ami_name}}-{{uuid}}",
    "ami_description": "An Amazon Linux AMI that has Vault and Consul installed.",
    "instance_type": "t2.micro",
    "name": "amazon-linux-ami",
    "region": "{{user `aws_region`}}",
    "subnet_id": "{{user `subnet_id`}}",
    "associate_public_ip_address": "{{user `associate_public_ip_address`}}",
    "tags": {
      "Name": "vault-instances",
      "Project": "demo",
      "Env": "dev"
    },
    "run_tags": {
      "Name": "vault-packer-builder"
    },
    "type": "amazon-ebs",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "architecture": "x86_64",
        "name": "*amzn-ami-hvm-*",
        "block-device-mapping.volume-type": "gp2",
        "root-device-type": "ebs"
      },
      "owners": ["amazon"],
      "most_recent": true
    },
    "ssh_username": "ec2-user"
  }],
  "provisioners": [{
      "type": "shell",
      "inline": [
        "sudo apt-get install -y git",
        "if [ '{{user `install_auth_signing_script`}}' = 'true' ]; then",
        "sudo apt-get install -y python-pip",
        "LC_ALL=C && sudo pip install boto3",
        "fi"
      ],
      "only": ["ubuntu16-ami"]
    },{
      "type": "shell",
      "inline": [
        "sudo yum install -y git"
      ],
      "only": ["amazon-linux-ami"]
    },
    {
      "type": "file",
      "source": "{{template_dir}}/",
      "destination": "/tmp",
      "pause_before": "30s"
    },{
    "type": "shell",
    "inline": [
      "chmod a+x /tmp/install-vault /tmp/run-vault /tmp/update-certificate-store",
      "if test -n \"{{user `vault_download_url`}}\"; then",
      " /tmp/install-vault --download-url {{user `vault_download_url`}};",
      "else",
      " /tmp/install-vault --version {{user `vault_version`}};",
      "fi"
    ]
  },{
    "type": "file",
    "source": "{{template_dir}}/auth/sign-request.py",
    "destination": "/tmp/sign-request.py"
  },{
    "type": "file",
    "source": "{{user `ca_public_key_path`}}",
    "destination": "/tmp/ca.crt.pem"
  },{
    "type": "file",
    "source": "{{user `tls_public_key_path`}}",
    "destination": "/tmp/vault.crt.pem"
  },{
    "type": "file",
    "source": "{{user `tls_private_key_path`}}",
    "destination": "/tmp/vault.key.pem"
  },{
    "type": "shell",
    "inline": [
      "if [ '{{user `install_auth_signing_script`}}' = 'true' ]; then",
      "sudo mv /tmp/sign-request.py /opt/vault/scripts/",
      "else",
      "sudo rm /tmp/sign-request.py",
      "fi",
      "sudo mv /tmp/ca.crt.pem /opt/vault/tls/",
      "sudo mv /tmp/vault.crt.pem /opt/vault/tls/",
      "sudo mv /tmp/vault.key.pem /opt/vault/tls/",
      "sudo chown -R vault:vault /opt/vault/tls/",
      "sudo chmod -R 600 /opt/vault/tls",
      "sudo chmod 700 /opt/vault/tls",
      "sudo /tmp/update-certificate-store --cert-file-path /opt/vault/tls/ca.crt.pem"
    ]
  }]
}
